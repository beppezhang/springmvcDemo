<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"

    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    ">
   

    <!-- CachingConnectionFactory 连接工厂 （有缓存功能）-->
    <bean id="cachingConnectionFactory"
        class="org.springframework.jms.connection.CachingConnectionFactory">
        <!-- Session缓存数量 -->
        <property name="sessionCacheSize" value="20" />
        <property name="targetConnectionFactory">  
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">  
                <!-- MQ地址 账户名 密码-->  
                <property name="brokerURL" value="tcp://192.168.90.158:61616" />
                <property name="userName" value="admin" />
                <property name="password" value="admin" />
                <!-- 是否异步发送 -->
                <property name="useAsyncSend" value="true"/>
            </bean>  
        </property>  
    </bean>
    
    <!-- 接收消息的目的地（一个主题）点对点队列 -->
    <bean id="destination" class="org.apache.activemq.command.ActiveMQQueue">
        <!-- 设置消息主题的名字 -->
        
        <constructor-arg index="0" value="messages" />
         
    </bean>
    
    <!-- 接收配置JMS模版 -->
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="cachingConnectionFactory" />
        <property name="defaultDestination" ref="destination" />
        <!-- value为true为发布/订阅模式； value为false为点对点模式-->
        <property name="pubSubDomain" value="false"/>
    </bean>



</beans>
      
      
      
      
      
      
      
      